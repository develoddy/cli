{"ast":null,"code":"import _classCallCheck from \"/Users/eddylujan/Documentos/DesarrolloWeb/Red-Social/client/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/eddylujan/Documentos/DesarrolloWeb/Red-Social/client/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { map, tap } from \"rxjs/operators\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { environment } from \"environments/environment\";\nimport { of, BehaviorSubject } from \"rxjs\";\nimport { ResProfileFollowOne, User } from \"@data/models/user\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport var UserService = /*#__PURE__*/(function () {\n  var UserService = /*#__PURE__*/function () {\n    // CONSTRUCTOR\n    function UserService(http) {\n      _classCallCheck(this, UserService);\n\n      this.http = http; // PROPERTIES\n\n      this.url = environment.uri;\n      this.isProduction = environment.production;\n      this.spinner = new BehaviorSubject(false);\n    }\n    /**\n     * Login\n     * @param id number\n     * @returns ICardUser\n     */\n\n\n    _createClass(UserService, [{\n      key: \"updateUser\",\n      value: function updateUser(user) {\n        var _this = this;\n\n        this.spinner.next(true);\n        var response = {\n          error: false,\n          msg: \"\",\n          data: null\n        };\n        var params = JSON.stringify(user);\n        return this.http.put(this.url + \"users/\" + user.id, params).pipe(tap(function (r) {\n          return _this.spinner.next(false);\n        }, function (error) {\n          return _this.spinner.next(false);\n        }), map(function (r) {\n          return response.data = r;\n        }));\n      }\n      /**\n       * getCounters\n       */\n\n    }, {\n      key: \"getCounters\",\n      value: function getCounters() {\n        var userId = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n        var response = {\n          error: false,\n          msg: \"\",\n          data: null\n        };\n\n        if (userId != null) {\n          return this.http.get(this.url + \"users/counters/one/\" + userId).pipe(map(function (r) {\n            return response.data = r;\n          }));\n        } else {\n          return this.http.get(this.url + \"users/counters/one/\").pipe(map(function (r) {\n            return response.data = r;\n          }));\n        }\n      }\n      /**\n       * getStats\n       */\n\n    }, {\n      key: \"getStats\",\n      value: function getStats() {\n        var stats = JSON.parse(localStorage.getItem(\"stats\"));\n\n        if (stats != \"undefined\") {\n          this.stats = stats;\n        } else {\n          this.stats = null;\n        }\n\n        return this.stats;\n      }\n      /**\n       * Get all user from api\n       * @returns ICardUser[]\n       */\n\n    }, {\n      key: \"getAllUsers\",\n      value: function getAllUsers() {\n        var _this2 = this;\n\n        var page = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n        this.spinner.next(true);\n        var response = {\n          error: false,\n          msg: \"\",\n          data: null\n        };\n        return this.http.get(this.url + \"users/\" + page).pipe(tap(function (resp) {\n          return _this2.spinner.next(false);\n        }, function (error) {\n          return _this2.spinner.next(false);\n        }), map(function (r) {\n          response.data = r;\n          return response;\n        }));\n      }\n      /**\n       * Get one user by id\n       * @param id number\n       * @returns ICardUser\n       */\n\n    }, {\n      key: \"getUserById\",\n      value: function getUserById(id) {\n        var _this3 = this;\n\n        this.spinner.next(true);\n        var response = {\n          error: false,\n          msg: \"\",\n          data: null\n        };\n        return this.http.get(this.url + \"users/one/\" + id).pipe(tap(function (resp) {\n          return _this3.spinner.next(false);\n        }, function (error) {\n          return _this3.spinner.next(false);\n        }), map(function (r) {\n          response.data = r;\n          return response;\n        }));\n      } // ERROR API\n\n    }, {\n      key: \"error\",\n      value: function error(_error) {\n        var errorMessage = \"\";\n\n        if (_error.error instanceof ErrorEvent) {\n          errorMessage = _error.error.message;\n        } else {\n          //errorMessage = `Error code: ${error.status} \\n Message:_${error.message}`;\n          errorMessage = \"Error code: \".concat(_error.status);\n        }\n\n        return of({\n          error: true,\n          msg: errorMessage,\n          data: null\n        });\n      }\n    }]);\n\n    return UserService;\n  }();\n\n  UserService.ɵfac = function UserService_Factory(t) {\n    return new (t || UserService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  UserService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: UserService,\n    factory: UserService.ɵfac,\n    providedIn: \"root\"\n  });\n  return UserService;\n})();","map":null,"metadata":{},"sourceType":"module"}