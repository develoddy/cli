{"ast":null,"code":"import _classCallCheck from \"/Users/eddylujan/Documentos/DesarrolloWeb/Red-Social/client/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/eddylujan/Documentos/DesarrolloWeb/Red-Social/client/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { Router, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\nimport { AuthenticationServiceService } from '@core/http/authentication-service.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@core/http/authentication-service.service\";\nexport var AuthGuard = /*#__PURE__*/(function () {\n  var AuthGuard = /*#__PURE__*/function () {\n    function AuthGuard(router, authenticationService) {\n      _classCallCheck(this, AuthGuard);\n\n      this.router = router;\n      this.authenticationService = authenticationService;\n    }\n\n    _createClass(AuthGuard, [{\n      key: \"canActivate\",\n      value: function canActivate(route, state) {\n        var currentUser = this.authenticationService.getIdentity();\n\n        if (currentUser) {\n          // logged in so return true\n          // Ha iniciado sessión entonces puede seguir\n          return true;\n        } // Not logged in so redirect to login page with the return url\n        // No ha iniciado sesión, así que redirija a la página de inicio de sesión con la URL de retorno\n        // this.router.navigate(['/login'], { queryParams: { returnUrl: state.url } });\n\n\n        this.router.navigate(['/login']);\n        return false;\n      }\n    }]);\n\n    return AuthGuard;\n  }();\n\n  AuthGuard.ɵfac = function AuthGuard_Factory(t) {\n    return new (t || AuthGuard)(i0.ɵɵinject(i1.Router), i0.ɵɵinject(i2.AuthenticationServiceService));\n  };\n\n  AuthGuard.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthGuard,\n    factory: AuthGuard.ɵfac,\n    providedIn: 'root'\n  });\n  return AuthGuard;\n})();","map":null,"metadata":{},"sourceType":"module"}