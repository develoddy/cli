{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"/Users/eddylujan/Documentos/DesarrolloWeb/Red-Social/client/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\n\nvar _createClass = require(\"/Users/eddylujan/Documentos/DesarrolloWeb/Red-Social/client/node_modules/@babel/runtime/helpers/createClass.js\").default;\n\nvar _inherits = require(\"/Users/eddylujan/Documentos/DesarrolloWeb/Red-Social/client/node_modules/@babel/runtime/helpers/inherits.js\").default;\n\nvar _createSuper = require(\"/Users/eddylujan/Documentos/DesarrolloWeb/Red-Social/client/node_modules/@babel/runtime/helpers/createSuper.js\").default;\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/*\n * This is an implementation of the Kobiton Driver Provider.\n * It is responsible for setting up the account object, tearing\n * it down, and setting up the driver correctly.\n */\n\nvar q = require(\"q\");\n\nvar logger_1 = require(\"../logger\");\n\nvar driverProvider_1 = require(\"./driverProvider\");\n\nvar logger = new logger_1.Logger('kobiton');\n\nvar Kobiton = /*#__PURE__*/function (_driverProvider_1$Dri) {\n  _inherits(Kobiton, _driverProvider_1$Dri);\n\n  var _super = _createSuper(Kobiton);\n\n  function Kobiton(config) {\n    _classCallCheck(this, Kobiton);\n\n    return _super.call(this, config);\n  }\n  /**\n   * Configure and launch (if applicable) the object's environment.\n   * @return {q.promise} A promise which will resolve when the environment is\n   *      ready to test.\n   */\n\n\n  _createClass(Kobiton, [{\n    key: \"setupDriverEnv\",\n    value: function setupDriverEnv() {\n      var deferred = q.defer();\n      this.config_.capabilities['kobitonUser'] = this.config_.kobitonUser;\n      this.config_.capabilities['kobitonKey'] = this.config_.kobitonKey;\n      this.config_.seleniumAddress = 'https://' + this.config_.kobitonUser + ':' + this.config_.kobitonKey + '@api.kobiton.com/wd/hub';\n      logger.info('Using Kobiton selenium server at ' + this.config_.seleniumAddress);\n      deferred.resolve();\n      return deferred.promise;\n    }\n  }]);\n\n  return Kobiton;\n}(driverProvider_1.DriverProvider);\n\nexports.Kobiton = Kobiton; //# sourceMappingURL=kobiton.js.map","map":null,"metadata":{},"sourceType":"script"}