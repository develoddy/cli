{"ast":null,"code":"import _classCallCheck from \"/Users/eddylujan/Documentos/DesarrolloWeb/Red-Social/client/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/eddylujan/Documentos/DesarrolloWeb/Red-Social/client/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { Router } from \"@angular/router\";\nimport { environment } from \"environments/environment\";\nimport { of } from \"rxjs\";\nimport { map } from \"rxjs/operators\";\nimport { User } from \"../../data/models/user\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/router\";\nexport var AuthenticationServiceService = /*#__PURE__*/(function () {\n  var AuthenticationServiceService = /*#__PURE__*/function () {\n    // CONSTRUCTOR\n    function AuthenticationServiceService(http, router) {\n      _classCallCheck(this, AuthenticationServiceService);\n\n      this.http = http;\n      this.router = router; // PROPERTIES\n\n      this.url = environment.uri;\n      this.isProduction = environment.production;\n      this.JWT_TOKEN = \"JWT_TOKEN\";\n      this.REFRESH_TOKEN = \"REFRESH_TOKEN\";\n      this.authTokenNew = \"new_auth_token\";\n    } // GUARDAR TOKEN\n\n\n    _createClass(AuthenticationServiceService, [{\n      key: \"saveToken\",\n      value: function saveToken(token, email, identity) {\n        localStorage.setItem(\"usertoken\", token);\n        localStorage.setItem(\"email\", email);\n        localStorage.setItem(\"identity\", JSON.stringify(identity));\n        this.token = token;\n      } // OBTENER TOKEN\n\n    }, {\n      key: \"getToken\",\n      value: function getToken() {\n        if (!this.token) {\n          this.token = localStorage.getItem(\"usertoken\");\n        }\n\n        return this.token;\n      } // OBTENER EL EMAIL\n\n    }, {\n      key: \"getEmail\",\n      value: function getEmail() {\n        if (!this.email) {\n          this.email = localStorage.getItem(\"email\");\n        }\n\n        return this.email;\n      } // OBTENER LA IDENTIDAD DEL USUARIO\n\n    }, {\n      key: \"getIdentity\",\n      value: function getIdentity() {\n        if (!this.identity) {\n          this.identity = JSON.parse(localStorage.getItem(\"identity\"));\n        }\n\n        return this.identity;\n      } // LOGGED IN\n\n    }, {\n      key: \"isLoggedInn\",\n      get: function get() {\n        var authToken = localStorage.getItem(\"usertoken\");\n        return authToken !== null ? true : false;\n      } // LOGIN\n\n    }, {\n      key: \"login\",\n      value: function login(user) {\n        var _this = this;\n\n        var response = {\n          error: false,\n          msg: \"\",\n          data: null\n        };\n        return this.http.post(this.url + \"users/login/\", user).pipe(map(function (r) {\n          response.data = r;\n\n          if (response.data.success) {\n            var token = response.data.success;\n            var email = response.data.profile.user.email;\n            var identity = response.data.profile;\n\n            _this.saveToken(token, email, identity);\n          }\n\n          return response.data;\n        }));\n      } // LOGOUT\n\n    }, {\n      key: \"logout\",\n      value: function logout() {\n        window.localStorage.clear();\n        this.identity = null;\n        this.router.navigate([\"/\"]);\n      } // ERROR API\n\n    }, {\n      key: \"error\",\n      value: function error(_error) {\n        var errorMessage = \"\";\n\n        if (_error.error instanceof ErrorEvent) {\n          errorMessage = _error.error.message;\n        } else {\n          errorMessage = \"Error code: \".concat(_error.status, \" \\n Message:_\").concat(_error.message);\n        }\n\n        return of({\n          error: true,\n          msg: errorMessage,\n          data: null\n        });\n      }\n    }]);\n\n    return AuthenticationServiceService;\n  }();\n\n  AuthenticationServiceService.ɵfac = function AuthenticationServiceService_Factory(t) {\n    return new (t || AuthenticationServiceService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.Router));\n  };\n\n  AuthenticationServiceService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthenticationServiceService,\n    factory: AuthenticationServiceService.ɵfac,\n    providedIn: \"root\"\n  });\n  return AuthenticationServiceService;\n})();","map":null,"metadata":{},"sourceType":"module"}